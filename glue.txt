%number_of_workers main fileedtssssssssssssssssing
%idle_timeout 5
%iam_role arn:aws:iam::317334430810:role/test
%region ap-south-1

import sys
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.transforms import *

glueContext = GlueContext(SparkContext.getOrCreate())

#inputGDF = glueContext.create_dynamic_frame_from_options(connection_type = "s3", connection_options = {"paths": ["s3://manikantabucket/test.txt"], "recurse" :True}, format = "csv")

#%stop_session

connection_mysql8_options_source_emp = {
    "url": "jdbc:mysql://ec2-3-108-254-225.ap-south-1.compute.amazonaws.com:3306/mysql",
    "dbtable": "db",
    "user": "root",
    "password": "root",
    "customJdbcDriverS3Path": "s3://manikantabucket/com.mysql.jdbc_5.1.5.jar",
    "customJdbcDriverClassName": "com.mysql.jdbc.Driver"}
	
df_emp = glueContext.create_dynamic_frame.from_options(connection_type="mysql", connection_options=connection_mysql8_options_source_emp)
S3bucket_node3 = glueContext.write_dynamic_frame.from_options(
    frame=df_emp,
    connection_type="s3",
    format="csv",
    connection_options={"path": "s3://manikantabucketo/test/", "partitionKeys": []},
    transformation_ctx="S3bucket_node3",
)
	
	
	
	
	
import sys
from awsglue.transforms import *
from awsglue.utils import getResolvedOptions
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.job import Job

## @params: [JOB_NAME]
args = getResolvedOptions(sys.argv, ['JOB_NAME'])

sc = SparkContext()
glueContext = GlueContext(sc)
spark = glueContext.spark_session
job = Job(glueContext)
job.init(args['JOB_NAME'], args)

connection_mysql8_options_source_emp = {
    "url": "jdbc:mysql://ec2-3-108-254-225.ap-south-1.compute.amazonaws.com:3306/mysql",
    "dbtable": "db",
    "user": "root",
    "password": "root",
    "customJdbcDriverS3Path": "s3://manikantabucket/com.mysql.jdbc_5.1.5.jar",
    "customJdbcDriverClassName": "com.mysql.jdbc.Driver"}
	
df_emp = glueContext.create_dynamic_frame.from_options(connection_type="mysql", connection_options=connection_mysql8_options_source_emp)
df_emp = df_emp.coalesce(1)
df_emp = glueContext.write_dynamic_frame.from_options(
    frame=df_emp,
    connection_type="s3",
    format="csv",
    connection_options={"path": "s3://manikantabucketo/test/", "partitionKeys": []},
    transformation_ctx="df_emp",
)
job.commit()
